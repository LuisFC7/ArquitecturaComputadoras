library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity FileReg is 
	Port( writeReg, readReg1, readReg2, shamt: in STD_LOGIC_VECTOR(3 downto 0);
		writeData: in STD_LOGIC_VECTOR(15 downto 0);
		clk,clr,wr,she,dir: in STD_LOGIC;
		readData1, readData2: out STD_LOGIC_VECTOR(15 downto 0));
end FileReg;

architecture Behavioral of FileReg is
type palabra is array (0 to 15) of std_logic_vector(15 downto 0);
signal banco : palabra;
begin
process(clk,clr)
variable aux:std_logic_vector(15 downto 0);
begin
	if(clr='1')then
		banco<= (others=>(others=>'0'));
	elsif (rising_edge(clk))then
	--escritura
	if(wr='1' and she='0')then--carga
		banco(conv_integer(writeReg))<=writeData;
	elsif(wr='1' and she='1' and dir ='0')then --corrimiento a la derecha
	--aqui meter barrel shifter
		--aux:=writeData;
		  aux:=banco(conv_integer(readReg1));
		  for i in 0 to 3 loop
		      for j in 0 to 15-2**i loop
		          if shamt(i)='0' then
		              aux(j):=aux(j);
		          else
		              aux(j):=aux(j+2**i);
		          end if;
		      end loop;
		      for j in 15-2**i+1 to 15 loop
		          if shamt(i)='0' then
		              aux(j):=aux(j);
		          else
		              aux(j):='0';
		          end if;
		       end loop;
		  end loop;
		  --banco(conv_integer(readReg1))<=aux;
		  banco(conv_integer(writeReg))<=aux;
--		for i in 0 to 3 loop
--			if(shamt(i)='0')then
--				aux:=aux;
--			else
--				for j in 0 to 15 loop
--					if(j<=(15)-2**i)then
--						aux(j):=aux(j+2**i);
--					else
--						aux(j):='0';
--					end if;
--				end loop;
--			end if;
--		end loop;
--		--banco(conv_integer(readReg1))<=aux;
--		banco(conv_integer(writeReg))<=aux;
	elsif(wr='1' and she='1' and dir ='1')then
	--izquierda
		aux:=banco(conv_integer(readReg1));
		for i in 0 to 3 loop
		  for j in 15 downto 2**i loop
		      if shamt(i)='0' then
		          aux(j):=aux(j);
		      else
		          aux(j):=aux(j-2**i);
		      end if;
		  end loop;
		  for j in 2**i-1 downto 0 loop
		      if shamt(i)='0' then
		          aux(j):=aux(j);
		      else
		          aux(j):='0';
		      end if;
		  end loop;
		end loop;
		--banco(conv_integer(readReg1))<=aux;
		banco(conv_integer(writeReg))<=aux;
--		for i in 0 to 3 loop
--			if(shamt(i)='0')then
--				aux:=aux;
--			else
--				for j in 15 downto 0 loop
--					if(j<2**i)then
--						aux(j):='0';
--					else
--						aux(j):=aux(j-2**i);
--					end if;
--				end loop;
--			end if;
--		end loop;
--		--banco(conv_integer(readReg1))<=aux;
--		banco(conv_integer(writeReg))<=aux;--banco(conv_integer(readReg1));
	end if;
end if;
end process;

readData1<=banco(conv_integer(readReg1));
readData2<=banco(conv_integer(readReg2));

end behavioral;
